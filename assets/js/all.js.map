{"version":3,"sources":["all.js","_burger.js","_bus.js","_valid.js"],"names":["bodyElement","document","querySelector","mainElement","footerElement","burger","bgCircle","classList","add","addEventListener","toggle","getCity","endpoint","axios","get","headers","getAuthorizationHeader","then","response","cityData","data","selectCity","getElementById","str","forEach","el","City","CityName","innerHTML","console","log","err","AppID","AppKey","GMTString","Date","toGMTString","ShaObj","jsSHA","setHMACKey","update","HMAC","getHMAC","Authorization"],"mappings":"AAAA;;;ACAA,IAAMA,WAAW,GAAGC,QAAQ,CAACC,aAAT,CAAuB,MAAvB,CAApB;AACA,IAAMC,WAAW,GAAGF,QAAQ,CAACC,aAAT,CAAuB,MAAvB,CAApB;AACA,IAAME,aAAa,GAAGH,QAAQ,CAACC,aAAT,CAAuB,qBAAvB,CAAtB;AACA,IAAMG,MAAM,GAAGJ,QAAQ,CAACC,aAAT,CAAuB,SAAvB,CAAf;AACA,IAAMI,QAAQ,GAAGL,QAAQ,CAACC,aAAT,CAAuB,YAAvB,CAAjB;AACAG,MAAM,CAACE,SAAP,CAAiBC,GAAjB,CAAqB,WAArB;AACAH,MAAM,CAACI,gBAAP,CAAwB,OAAxB,EAAgC,YAAI;AAChCJ,EAAAA,MAAM,CAACE,SAAP,CAAiBG,MAAjB,CAAwB,SAAxB;AACAL,EAAAA,MAAM,CAACE,SAAP,CAAiBG,MAAjB,CAAwB,WAAxB;AACAJ,EAAAA,QAAQ,CAACC,SAAT,CAAmBG,MAAnB,CAA0B,QAA1B;AACAP,EAAAA,WAAW,CAACI,SAAZ,CAAsBG,MAAtB,CAA6B,QAA7B;AACAN,EAAAA,aAAa,CAACG,SAAd,CAAwBG,MAAxB,CAA+B,QAA/B;AACH,CAND;;;ACNA;AACA,SAASC,OAAT,GAAkB;AACd,MAAMC,QAAQ,GAAG,kEAAjB;AAEAC,EAAAA,KAAK,CAACC,GAAN,CAAUF,QAAV,EACI;AACIG,IAAAA,OAAO,EAAEC,sBAAsB;AADnC,GADJ,EAICC,IAJD,CAIM,UAAAC,QAAQ,EAAI;AACV,QAAMC,QAAQ,GAAGD,QAAQ,CAACE,IAA1B;AACA,QAAMC,UAAU,GAAGpB,QAAQ,CAACqB,cAAT,CAAwB,aAAxB,CAAnB;AACA,QAAIC,GAAG,GAAG,iCAAV;AACAJ,IAAAA,QAAQ,CAACK,OAAT,CAAiB,UAAAC,EAAE,EAAE;AACjBF,MAAAA,GAAG,8BAAoBE,EAAE,CAACC,IAAvB,gBAAgCD,EAAE,CAACE,QAAnC,cAAH;AACH,KAFD;AAGAN,IAAAA,UAAU,CAACO,SAAX,GAAqBL,GAArB;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAYX,QAAZ;AACH,GAbL,WAcO,UAAAY,GAAG;AAAA,WAAIF,OAAO,CAACC,GAAR,CAAYC,GAAZ,CAAJ;AAAA,GAdV;AAgBH;;;ACpBD;AACA,SAASf,sBAAT,GAAkC;AAC9B,MAAIgB,KAAK,GAAG,kCAAZ;AACA,MAAIC,MAAM,GAAG,6BAAb;AACA,MAAIC,SAAS,GAAG,IAAIC,IAAJ,GAAWC,WAAX,EAAhB;AACA,MAAIC,MAAM,GAAG,IAAIC,KAAJ,CAAU,OAAV,EAAmB,MAAnB,CAAb;AACAD,EAAAA,MAAM,CAACE,UAAP,CAAkBN,MAAlB,EAA0B,MAA1B;AACAI,EAAAA,MAAM,CAACG,MAAP,CAAc,aAAaN,SAA3B;AACA,MAAIO,IAAI,GAAGJ,MAAM,CAACK,OAAP,CAAe,KAAf,CAAX;AACA,MAAIC,aAAa,GAAG,qBAAqBX,KAArB,GAA6B,+DAA7B,GAA+FS,IAA/F,GAAsG,IAA1H;AACA,SAAO;AAAE,qBAAiBE,aAAnB;AAAkC,cAAUT;AAA5C,GAAP;AACH","file":"all.js","sourcesContent":["","const bodyElement = document.querySelector('body');\r\nconst mainElement = document.querySelector('main');\r\nconst footerElement = document.querySelector('footer.fixed-bottom');\r\nconst burger = document.querySelector('.burger');\r\nconst bgCircle = document.querySelector('.bg-circle');\r\nburger.classList.add('unToggled');\r\nburger.addEventListener('click',()=>{\r\n    burger.classList.toggle('toggled');\r\n    burger.classList.toggle('unToggled');\r\n    bgCircle.classList.toggle('d-none');\r\n    mainElement.classList.toggle('d-none');\r\n    footerElement.classList.toggle('d-none');\r\n});\r\n","// 搜尋欄取得縣市名稱\r\nfunction getCity(){\r\n    const endpoint = 'https://gist.motc.gov.tw/gist_api/V3/Map/Basic/City?$format=JSON';\r\n\r\n    axios.get(endpoint,\r\n        {\r\n            headers: getAuthorizationHeader()\r\n        })\r\n    .then(response => {\r\n            const cityData = response.data;\r\n            const selectCity = document.getElementById('select_city');\r\n            let str = \"<option selected>請選擇縣市</option>\";\r\n            cityData.forEach(el=>{\r\n                str+=`<option value=\"${el.City}\">${el.CityName}</option>`\r\n            });\r\n            selectCity.innerHTML=str;\r\n            console.log(cityData);\r\n        })\r\n    .catch(err => console.log(err));\r\n\r\n}","// header 驗證\r\nfunction getAuthorizationHeader() {\r\n    let AppID = '9eeb30e3588740618367a446631cbc3f';\r\n    let AppKey = 'CKTwBadJd3_0_EdqiXE0kEg8fTw';\r\n    let GMTString = new Date().toGMTString();\r\n    let ShaObj = new jsSHA('SHA-1', 'TEXT');\r\n    ShaObj.setHMACKey(AppKey, 'TEXT');\r\n    ShaObj.update('x-date: ' + GMTString);\r\n    let HMAC = ShaObj.getHMAC('B64');\r\n    let Authorization = 'hmac username=\\\"' + AppID + '\\\", algorithm=\\\"hmac-sha1\\\", headers=\\\"x-date\\\", signature=\\\"' + HMAC + '\\\"';\r\n    return { 'Authorization': Authorization, 'X-Date': GMTString }; \r\n}\r\n"]}